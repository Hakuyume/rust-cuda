use cuda_sys;
use cuda_sys::cudaError::*;

use super::Error;

impl Into<cuda_sys::cudaError> for Error {
    fn into(self) -> cuda_sys::cudaError {
        match self {
            Error::MemoryAllocation => cudaErrorMemoryAllocation,
            Error::InitializationError => cudaErrorInitializationError,
            Error::LaunchFailure => cudaErrorLaunchFailure,
            Error::PriorLaunchFailure => cudaErrorPriorLaunchFailure,
            Error::LaunchTimeout => cudaErrorLaunchTimeout,
            Error::LaunchOutOfResources => cudaErrorLaunchOutOfResources,
            Error::InvalidDeviceFunction => cudaErrorInvalidDeviceFunction,
            Error::InvalidConfiguration => cudaErrorInvalidConfiguration,
            Error::InvalidDevice => cudaErrorInvalidDevice,
            Error::InvalidValue => cudaErrorInvalidValue,
            Error::InvalidPitchValue => cudaErrorInvalidPitchValue,
            Error::InvalidSymbol => cudaErrorInvalidSymbol,
            Error::MapBufferObjectFailed => cudaErrorMapBufferObjectFailed,
            Error::UnmapBufferObjectFailed => cudaErrorUnmapBufferObjectFailed,
            Error::InvalidHostPointer => cudaErrorInvalidHostPointer,
            Error::InvalidDevicePointer => cudaErrorInvalidDevicePointer,
            Error::InvalidTexture => cudaErrorInvalidTexture,
            Error::InvalidTextureBinding => cudaErrorInvalidTextureBinding,
            Error::InvalidChannelDescriptor => cudaErrorInvalidChannelDescriptor,
            Error::InvalidMemcpyDirection => cudaErrorInvalidMemcpyDirection,
            Error::AddressOfConstant => cudaErrorAddressOfConstant,
            Error::TextureFetchFailed => cudaErrorTextureFetchFailed,
            Error::TextureNotBound => cudaErrorTextureNotBound,
            Error::SynchronizationError => cudaErrorSynchronizationError,
            Error::InvalidFilterSetting => cudaErrorInvalidFilterSetting,
            Error::InvalidNormSetting => cudaErrorInvalidNormSetting,
            Error::MixedDeviceExecution => cudaErrorMixedDeviceExecution,
            Error::CudartUnloading => cudaErrorCudartUnloading,
            Error::Unknown => cudaErrorUnknown,
            Error::NotYetImplemented => cudaErrorNotYetImplemented,
            Error::MemoryValueTooLarge => cudaErrorMemoryValueTooLarge,
            Error::InvalidResourceHandle => cudaErrorInvalidResourceHandle,
            Error::NotReady => cudaErrorNotReady,
            Error::InsufficientDriver => cudaErrorInsufficientDriver,
            Error::SetOnActiveProcess => cudaErrorSetOnActiveProcess,
            Error::InvalidSurface => cudaErrorInvalidSurface,
            Error::NoDevice => cudaErrorNoDevice,
            Error::ECCUncorrectable => cudaErrorECCUncorrectable,
            Error::SharedObjectSymbolNotFound => cudaErrorSharedObjectSymbolNotFound,
            Error::SharedObjectInitFailed => cudaErrorSharedObjectInitFailed,
            Error::UnsupportedLimit => cudaErrorUnsupportedLimit,
            Error::DuplicateVariableName => cudaErrorDuplicateVariableName,
            Error::DuplicateTextureName => cudaErrorDuplicateTextureName,
            Error::DuplicateSurfaceName => cudaErrorDuplicateSurfaceName,
            Error::DevicesUnavailable => cudaErrorDevicesUnavailable,
            Error::InvalidKernelImage => cudaErrorInvalidKernelImage,
            Error::NoKernelImageForDevice => cudaErrorNoKernelImageForDevice,
            Error::IncompatibleDriverContext => cudaErrorIncompatibleDriverContext,
            Error::PeerAccessAlreadyEnabled => cudaErrorPeerAccessAlreadyEnabled,
            Error::PeerAccessNotEnabled => cudaErrorPeerAccessNotEnabled,
            Error::DeviceAlreadyInUse => cudaErrorDeviceAlreadyInUse,
            Error::ProfilerDisabled => cudaErrorProfilerDisabled,
            Error::ProfilerNotInitialized => cudaErrorProfilerNotInitialized,
            Error::ProfilerAlreadyStarted => cudaErrorProfilerAlreadyStarted,
            Error::ProfilerAlreadyStopped => cudaErrorProfilerAlreadyStopped,
            Error::Assert => cudaErrorAssert,
            Error::TooManyPeers => cudaErrorTooManyPeers,
            Error::HostMemoryAlreadyRegistered => cudaErrorHostMemoryAlreadyRegistered,
            Error::HostMemoryNotRegistered => cudaErrorHostMemoryNotRegistered,
            Error::OperatingSystem => cudaErrorOperatingSystem,
            Error::PeerAccessUnsupported => cudaErrorPeerAccessUnsupported,
            Error::LaunchMaxDepthExceeded => cudaErrorLaunchMaxDepthExceeded,
            Error::LaunchFileScopedTex => cudaErrorLaunchFileScopedTex,
            Error::LaunchFileScopedSurf => cudaErrorLaunchFileScopedSurf,
            Error::SyncDepthExceeded => cudaErrorSyncDepthExceeded,
            Error::LaunchPendingCountExceeded => cudaErrorLaunchPendingCountExceeded,
            Error::NotPermitted => cudaErrorNotPermitted,
            Error::NotSupported => cudaErrorNotSupported,
            Error::HardwareStackError => cudaErrorHardwareStackError,
            Error::IllegalInstruction => cudaErrorIllegalInstruction,
            Error::MisalignedAddress => cudaErrorMisalignedAddress,
            Error::InvalidAddressSpace => cudaErrorInvalidAddressSpace,
            Error::InvalidPc => cudaErrorInvalidPc,
            Error::IllegalAddress => cudaErrorIllegalAddress,
            Error::InvalidPtx => cudaErrorInvalidPtx,
            Error::InvalidGraphicsContext => cudaErrorInvalidGraphicsContext,
            Error::NvlinkUncorrectable => cudaErrorNvlinkUncorrectable,
            Error::StartupFailure => cudaErrorStartupFailure,
        }
    }
}
