use cuda_sys::cudaError;

use super::Error;

impl Into<cudaError> for Error {
    fn into(self) -> cudaError {
        match self {
            Error::MemoryAllocation => cudaError::cudaErrorMemoryAllocation,
            Error::InitializationError => cudaError::cudaErrorInitializationError,
            Error::LaunchFailure => cudaError::cudaErrorLaunchFailure,
            Error::PriorLaunchFailure => cudaError::cudaErrorPriorLaunchFailure,
            Error::LaunchTimeout => cudaError::cudaErrorLaunchTimeout,
            Error::LaunchOutOfResources => cudaError::cudaErrorLaunchOutOfResources,
            Error::InvalidDeviceFunction => cudaError::cudaErrorInvalidDeviceFunction,
            Error::InvalidConfiguration => cudaError::cudaErrorInvalidConfiguration,
            Error::InvalidDevice => cudaError::cudaErrorInvalidDevice,
            Error::InvalidValue => cudaError::cudaErrorInvalidValue,
            Error::InvalidPitchValue => cudaError::cudaErrorInvalidPitchValue,
            Error::InvalidSymbol => cudaError::cudaErrorInvalidSymbol,
            Error::MapBufferObjectFailed => cudaError::cudaErrorMapBufferObjectFailed,
            Error::UnmapBufferObjectFailed => cudaError::cudaErrorUnmapBufferObjectFailed,
            Error::InvalidHostPointer => cudaError::cudaErrorInvalidHostPointer,
            Error::InvalidDevicePointer => cudaError::cudaErrorInvalidDevicePointer,
            Error::InvalidTexture => cudaError::cudaErrorInvalidTexture,
            Error::InvalidTextureBinding => cudaError::cudaErrorInvalidTextureBinding,
            Error::InvalidChannelDescriptor => cudaError::cudaErrorInvalidChannelDescriptor,
            Error::InvalidMemcpyDirection => cudaError::cudaErrorInvalidMemcpyDirection,
            Error::AddressOfConstant => cudaError::cudaErrorAddressOfConstant,
            Error::TextureFetchFailed => cudaError::cudaErrorTextureFetchFailed,
            Error::TextureNotBound => cudaError::cudaErrorTextureNotBound,
            Error::SynchronizationError => cudaError::cudaErrorSynchronizationError,
            Error::InvalidFilterSetting => cudaError::cudaErrorInvalidFilterSetting,
            Error::InvalidNormSetting => cudaError::cudaErrorInvalidNormSetting,
            Error::MixedDeviceExecution => cudaError::cudaErrorMixedDeviceExecution,
            Error::CudartUnloading => cudaError::cudaErrorCudartUnloading,
            Error::Unknown => cudaError::cudaErrorUnknown,
            Error::NotYetImplemented => cudaError::cudaErrorNotYetImplemented,
            Error::MemoryValueTooLarge => cudaError::cudaErrorMemoryValueTooLarge,
            Error::InvalidResourceHandle => cudaError::cudaErrorInvalidResourceHandle,
            Error::NotReady => cudaError::cudaErrorNotReady,
            Error::InsufficientDriver => cudaError::cudaErrorInsufficientDriver,
            Error::SetOnActiveProcess => cudaError::cudaErrorSetOnActiveProcess,
            Error::InvalidSurface => cudaError::cudaErrorInvalidSurface,
            Error::NoDevice => cudaError::cudaErrorNoDevice,
            Error::ECCUncorrectable => cudaError::cudaErrorECCUncorrectable,
            Error::SharedObjectSymbolNotFound => cudaError::cudaErrorSharedObjectSymbolNotFound,
            Error::SharedObjectInitFailed => cudaError::cudaErrorSharedObjectInitFailed,
            Error::UnsupportedLimit => cudaError::cudaErrorUnsupportedLimit,
            Error::DuplicateVariableName => cudaError::cudaErrorDuplicateVariableName,
            Error::DuplicateTextureName => cudaError::cudaErrorDuplicateTextureName,
            Error::DuplicateSurfaceName => cudaError::cudaErrorDuplicateSurfaceName,
            Error::DevicesUnavailable => cudaError::cudaErrorDevicesUnavailable,
            Error::InvalidKernelImage => cudaError::cudaErrorInvalidKernelImage,
            Error::NoKernelImageForDevice => cudaError::cudaErrorNoKernelImageForDevice,
            Error::IncompatibleDriverContext => cudaError::cudaErrorIncompatibleDriverContext,
            Error::PeerAccessAlreadyEnabled => cudaError::cudaErrorPeerAccessAlreadyEnabled,
            Error::PeerAccessNotEnabled => cudaError::cudaErrorPeerAccessNotEnabled,
            Error::DeviceAlreadyInUse => cudaError::cudaErrorDeviceAlreadyInUse,
            Error::ProfilerDisabled => cudaError::cudaErrorProfilerDisabled,
            Error::ProfilerNotInitialized => cudaError::cudaErrorProfilerNotInitialized,
            Error::ProfilerAlreadyStarted => cudaError::cudaErrorProfilerAlreadyStarted,
            Error::ProfilerAlreadyStopped => cudaError::cudaErrorProfilerAlreadyStopped,
            Error::Assert => cudaError::cudaErrorAssert,
            Error::TooManyPeers => cudaError::cudaErrorTooManyPeers,
            Error::HostMemoryAlreadyRegistered => cudaError::cudaErrorHostMemoryAlreadyRegistered,
            Error::HostMemoryNotRegistered => cudaError::cudaErrorHostMemoryNotRegistered,
            Error::OperatingSystem => cudaError::cudaErrorOperatingSystem,
            Error::PeerAccessUnsupported => cudaError::cudaErrorPeerAccessUnsupported,
            Error::LaunchMaxDepthExceeded => cudaError::cudaErrorLaunchMaxDepthExceeded,
            Error::LaunchFileScopedTex => cudaError::cudaErrorLaunchFileScopedTex,
            Error::LaunchFileScopedSurf => cudaError::cudaErrorLaunchFileScopedSurf,
            Error::SyncDepthExceeded => cudaError::cudaErrorSyncDepthExceeded,
            Error::LaunchPendingCountExceeded => cudaError::cudaErrorLaunchPendingCountExceeded,
            Error::NotPermitted => cudaError::cudaErrorNotPermitted,
            Error::NotSupported => cudaError::cudaErrorNotSupported,
            Error::HardwareStackError => cudaError::cudaErrorHardwareStackError,
            Error::IllegalInstruction => cudaError::cudaErrorIllegalInstruction,
            Error::MisalignedAddress => cudaError::cudaErrorMisalignedAddress,
            Error::InvalidAddressSpace => cudaError::cudaErrorInvalidAddressSpace,
            Error::InvalidPc => cudaError::cudaErrorInvalidPc,
            Error::IllegalAddress => cudaError::cudaErrorIllegalAddress,
            Error::InvalidPtx => cudaError::cudaErrorInvalidPtx,
            Error::InvalidGraphicsContext => cudaError::cudaErrorInvalidGraphicsContext,
            Error::NvlinkUncorrectable => cudaError::cudaErrorNvlinkUncorrectable,
            Error::StartupFailure => cudaError::cudaErrorStartupFailure,
        }
    }
}
